version: 2.1

executors:
  docker-executor:
    docker:
      - image: cimg/base:stable
    working_directory: ~/app

jobs:
  run-docker:
    executor: docker-executor
    parameters:
      run_id:
        type: string
    steps:
      - checkout

      - setup_remote_docker:
          version: 20.10.24

      - run:
          name: Pull Docker images
          command: |
            docker pull nduythanh1/selenium-chrome-app
            docker pull nduythanh1/stream-app
            docker pull nduythanh1/selenium-earnvids-app
      
      - run:
          name: Run 4 containers in parallel (2 streamhg + 2 earnvids)
          command: |
            echo "Starting 4 containers for RUN_ID: << parameters.run_id >>"
      
            # StreamHG A
            timeout 10m docker run --rm \
              -e RUN_ID=<< parameters.run_id >>_a \
              nduythanh1/stream-app > stream1_<< parameters.run_id >>.log 2>&1 &
      
            # StreamHG B
            timeout 10m docker run --rm \
              -e RUN_ID=<< parameters.run_id >>_b \
              nduythanh1/stream-app > stream2_<< parameters.run_id >>.log 2>&1 &
      
            # Earnvids A
            timeout 10m docker run --rm \
              -e RUN_ID=<< parameters.run_id >>_c \
              nduythanh1/selenium-earnvids-app > earn1_<< parameters.run_id >>.log 2>&1 &
      
            # Earnvids B
            timeout 10m docker run --rm \
              -e RUN_ID=<< parameters.run_id >>_d \
              nduythanh1/selenium-earnvids-app > earn2_<< parameters.run_id >>.log 2>&1 &
      
            wait
            echo "âœ… All 4 containers finished for RUN_ID: << parameters.run_id >>"

      - run:
          name: Run container with timeout 15 minutes (hard limit)
          command: |
            echo "Running job with parameter: << parameters.run_id >>"
      
            # Start container in background and save container ID
            docker run -d --rm \
              --name selenium_<< parameters.run_id >> \
              -e RUN_ID=<< parameters.run_id >> \
              nduythanh1/selenium-chrome-app > cid.txt
      
            CID=$(cat cid.txt)
      
            # Wait for up to 15 minutes (900 seconds), then kill if needed
            (docker wait $CID & echo $! > wait_pid.txt) &
      
            sleep 900 && echo "Timeout reached! Killing container..." && docker kill $CID || true
      
            # Ensure wait finishes so CI job doesn't hang
            wait $(cat wait_pid.txt) || true

            echo "Container completed or was terminated"


workflows:
  run-parallel:
    jobs:
      - run-docker:
          matrix:
            parameters:
              run_id: ["job1", "job2", "job3", "job4", "job5", "job6","job7", "job8", "job9", "job10",
                       "job11", "job12", "job13", "job14", "job15", "job16","job17", "job18", "job19", "job20",
                       "job21", "job22", "job23", "job24", "job25", "job26","job27", "job28", "job29", "job30"]
